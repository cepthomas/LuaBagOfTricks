
-- TODO0 Create C version of the C# functionality. Also md version.


-- C flavor.
local push_funcs = 
{
    boolean = "lua_pushboolean",
    integer = "lua_pushinteger",
    number = "lua_pushnumber",
    string ="lua_pushstring",
    tableex = "lua_pushtableex"
}

local is_funcs = 
{
    boolean = "lua_isboolean",
    integer = "lua_isinteger",
    number = "lua_isnumber",
    string ="lua_isstring",
    tableex = "lua_istableex"
}

local to_funcs = 
{
    boolean = "lua_toboolean",
    integer = "lua_tointeger",
    number = "lua_tonumber",
    string ="lua_tostring",
    tableex = "lua_totableex"
}




----------------------------- C file -----------------------------

preamble = [[

///// Warning - this is a file generated by gen_interop.lua, do not edit. /////

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include "lua.h"
#include "lualib.h"
#include "lauxlib.h"
#include "luaex.h"
#include "need name !!.h"
{ADD_INCLUDE}

]]


infrastructure = [[
//------------------ Infrastructure ----------------------//

static const luaL_Reg function_map[] =
{
    // ALL collected
    { export_host_funcs.LUA_FUNC_NAME, export_host_funcs.HOST_FUNC_NAME }, -- LOOP
    //...
    { NULL, NULL }
};

int interop_Open(lua_State* l)
{
    luaL_newlib(l, function_map);
    return 1;
}

void interop_Load(lua_State* l)
{
    luaL_requiref(l, LIB_NAME, interop_Open, true);
}
]]


postamble ={{

    
}}


---------------------------------- h file -----------------------------------



preamble = [[
#ifndef INTEROP_H
#define INTEROP_H

///// Warning - this is a generated file, do not edit. /////


// --------------------------------------------------------------------------
// Infrastructure function.
void interop_Load(lua_State* l);
]]

export_lua_funcs = [[        
//---------------- Call lua functions from host - export_lua_funcs -------------//
// ALL functions - LOOP

// --------------------------------------------------------------------------
// func.DESCRIPTION
// @param ARG1_NAME ARG1_DESCRIPTION
// @param ...
// @return RET_TYPE RET_DESCRIPTION
RET_TYPE HOST_FUNC_NAME(ARG1_TYPE ARG1_NAME, ARG2_TYPE ARG2_NAME, ARG3_TYPE ARG3_NAME, ...)

]]

export_host_funcs = [[
//---------------- Call host functions from Lua - export_host_funcs -------------//
// ALL functions - LOOP

// --------------------------------------------------------------------------
// func.DESCRIPTION
// @param ARG1_NAME ARG1_DESCRIPTION
// @param ...
// @return RET_TYPE RET_DESCRIPTION
RET_TYPE WORK_FUNC(ARG1_TYPE ARG1_NAME, ARG2_TYPE ARG2_NAME, ...);
]]

postamble = [[
#endif // INTEROP_H
]]
